{"difficulty": "하", "question": "도서 관리를 담당하는 컨트롤러 클래스는 무엇인가요?", "answer": "com.skax.library.controller.BookController"}
{"difficulty": "하", "question": "회원 정보를 관리하는 컨트롤러 클래스는 무엇인가요?", "answer": "com.skax.library.controller.MemberController"}
{"difficulty": "하", "question": "카테고리 정보를 관리하는 컨트롤러 클래스는 무엇인가요?", "answer": "com.skax.library.controller.CategoryController"}
{"difficulty": "하", "question": "대출 관리를 담당하는 컨트롤러 클래스는 무엇인가요?", "answer": "com.skax.library.controller.LoanController"}
{"difficulty": "하", "question": "예약 기능을 관리하는 컨트롤러 클래스는 무엇인가요?", "answer": "com.skax.library.controller.ReservationController"}
{"difficulty": "하", "question": "벌금 관리를 담당하는 컨트롤러 클래스는 무엇인가요?", "answer": "com.skax.library.controller.FineController"}
{"difficulty": "하", "question": "도서 정보를 저장하는 엔티티 클래스는 무엇인가요?", "answer": "com.skax.library.model.Book"}
{"difficulty": "하", "question": "회원 정보를 저장하는 엔티티 클래스는 무엇인가요?", "answer": "com.skax.library.model.Member"}
{"difficulty": "하", "question": "카테고리 정보를 저장하는 엔티티 클래스는 무엇인가요?", "answer": "com.skax.library.model.Category"}
{"difficulty": "하", "question": "대출 정보를 저장하는 엔티티 클래스는 무엇인가요?", "answer": "com.skax.library.model.Loan"}
{"difficulty": "하", "question": "예약 정보를 저장하는 엔티티 클래스는 무엇인가요?", "answer": "com.skax.library.model.Reservation"}
{"difficulty": "하", "question": "벌금 정보를 저장하는 엔티티 클래스는 무엇인가요?", "answer": "com.skax.library.model.Fine"}
{"difficulty": "하", "question": "도서 정보를 데이터베이스에 접근하는 리포지토리 클래스는 무엇인가요?", "answer": "com.skax.library.repository.BookRepository"}
{"difficulty": "하", "question": "회원 정보를 데이터베이스에 접근하는 리포지토리 클래스는 무엇인가요?", "answer": "com.skax.library.repository.MemberRepository"}
{"difficulty": "하", "question": "카테고리 정보를 데이터베이스에 접근하는 리포지토리 클래스는 무엇인가요?", "answer": "com.skax.library.repository.CategoryRepository"}
{"difficulty": "하", "question": "대출 정보를 데이터베이스에 접근하는 리포지토리 클래스는 무엇인가요?", "answer": "com.skax.library.repository.LoanRepository"}
{"difficulty": "하", "question": "예약 정보를 데이터베이스에 접근하는 리포지토리 클래스는 무엇인가요?", "answer": "com.skax.library.repository.ReservationRepository"}
{"difficulty": "하", "question": "벌금 정보를 데이터베이스에 접근하는 리포지토리 클래스는 무엇인가요?", "answer": "com.skax.library.repository.FineRepository"}
{"difficulty": "하", "question": "도서 관리 서비스 인터페이스는 무엇인가요?", "answer": "com.skax.library.service.BookService"}
{"difficulty": "하", "question": "도서 관리 서비스 구현체는 무엇인가요?", "answer": "com.skax.library.service.impl.BookServiceImpl"}
{"difficulty": "하", "question": "회원 관리 서비스 인터페이스는 무엇인가요?", "answer": "com.skax.library.service.MemberService"}
{"difficulty": "하", "question": "회원 관리 서비스 구현체는 무엇인가요?", "answer": "com.skax.library.service.impl.MemberServiceImpl"}
{"difficulty": "하", "question": "대출 관리 서비스 인터페이스는 무엇인가요?", "answer": "com.skax.library.service.LoanService"}
{"difficulty": "하", "question": "대출 관리 서비스 구현체는 무엇인가요?", "answer": "com.skax.library.service.impl.LoanServiceImpl"}
{"difficulty": "하", "question": "예약 관리 서비스 인터페이스는 무엇인가요?", "answer": "com.skax.library.service.ReservationService"}
{"difficulty": "하", "question": "예약 관리 서비스 구현체는 무엇인가요?", "answer": "com.skax.library.service.impl.ReservationServiceImpl"}
{"difficulty": "하", "question": "카테고리 관리 서비스 인터페이스는 무엇인가요?", "answer": "com.skax.library.service.CategoryService"}
{"difficulty": "하", "question": "카테고리 관리 서비스 구현체는 무엇인가요?", "answer": "com.skax.library.service.impl.CategoryServiceImpl"}
{"difficulty": "하", "question": "벌금 관리 서비스 인터페이스는 무엇인가요?", "answer": "com.skax.library.service.FineService"}
{"difficulty": "하", "question": "벌금 관리 서비스 구현체는 무엇인가요?", "answer": "com.skax.library.service.impl.FineServiceImpl"}
{"difficulty": "하", "question": "ISBN으로 도서를 검색하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.BookServiceImpl.getBookByIsbn"}
{"difficulty": "하", "question": "사용 가능한 도서만 검색하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.BookServiceImpl.getAvailableBooks"}
{"difficulty": "하", "question": "도서를 대출하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.LoanServiceImpl.checkoutBook"}
{"difficulty": "하", "question": "도서를 반납하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.LoanServiceImpl.returnBook"}
{"difficulty": "하", "question": "지정된 카테고리에 속한 도서를 검색하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.BookServiceImpl.getBooksByCategory"}
{"difficulty": "하", "question": "새로운 회원을 등록하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.MemberServiceImpl.createMember"}
{"difficulty": "하", "question": "사용자가 지정한 도서를 예약하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.ReservationServiceImpl.createReservation"}
{"difficulty": "하", "question": "벌금을 부과하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.FineServiceImpl.createFine"}
{"difficulty": "하", "question": "벌금을 지불하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.FineServiceImpl.payFine"}
{"difficulty": "하", "question": "사용자 ID를 통해 회원 정보를 조회하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.MemberServiceImpl.getMemberById"}
{"difficulty": "하", "question": "회원 상태를 변경하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.MemberServiceImpl.updateMemberStatus"}
{"difficulty": "하", "question": "회원이 관리하는 엔티티 클래스에서 회원 상태를 정의하는 엔터메이션은 무엇인가요?", "answer": "com.skax.library.model.Member.MemberStatus"}
{"difficulty": "하", "question": "도서 상태를 변경하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.BookServiceImpl.updateBookStatus"}
{"difficulty": "하", "question": "도서 엔티티에서 정의한 도서 상태 엔터메이션은 무엇인가요?", "answer": "com.skax.library.model.Book.BookStatus"}
{"difficulty": "하", "question": "대출 엔티티에서 정의한 대출 상태 엔터메이션은 무엇인가요?", "answer": "com.skax.library.model.Loan.LoanStatus"}
{"difficulty": "하", "question": "대출 기간을 연장하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.LoanServiceImpl.extendLoan"}
{"difficulty": "하", "question": "지정된 도서가 대출 가능한지 확인하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.LoanServiceImpl.isBookAvailable"}
{"difficulty": "하", "question": "회원이 추가 도서를 대출할 수 있는지 확인하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.LoanServiceImpl.canMemberBorrow"}
{"difficulty": "하", "question": "반납 기한이 지난 대출을 검색하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.LoanServiceImpl.getOverdueLoans"}
{"difficulty": "하", "question": "활성 상태의 대출만 조회하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.LoanServiceImpl.getActiveLoans"}
{"difficulty": "하", "question": "특정 회원의 활성 대출만 조회하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.LoanServiceImpl.getActiveLoansByMemberId"}
{"difficulty": "하", "question": "도서에 새로운 카테고리를 추가하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.BookServiceImpl.addCategoriesToBook"}
{"difficulty": "하", "question": "도서에서 특정 카테고리를 제거하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.BookServiceImpl.removeCategoryFromBook"}
{"difficulty": "하", "question": "회원이 대출한 모든 도서를 조회하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.LoanServiceImpl.getLoansByMemberId"}
{"difficulty": "하", "question": "예약이 유효한지 확인하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.ReservationServiceImpl.isReservationValid"}
{"difficulty": "하", "question": "현재 유효한 모든 예약을 조회하는 메서드는 무엇인가요?", "answer": "com.skax.library.service.impl.ReservationServiceImpl.getActiveReservations"}
{"difficulty": "중", "question": "새 도서를 등록할 때 전체 처리 흐름에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.BookController", "com.skax.library.service.impl.BookServiceImpl.createBook", "com.skax.library.repository.BookRepository"]}
{"difficulty": "중", "question": "회원 가입 게시 전체 처리 흐름에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.MemberController", "com.skax.library.service.impl.MemberServiceImpl.createMember", "com.skax.library.repository.MemberRepository"]}
{"difficulty": "중", "question": "도서 대출 처리 시 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.LoanController", "com.skax.library.service.impl.LoanServiceImpl.checkoutBook", "com.skax.library.repository.LoanRepository"]}
{"difficulty": "중", "question": "도서 반납 처리 시 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.LoanController", "com.skax.library.service.impl.LoanServiceImpl.returnBook", "com.skax.library.repository.LoanRepository"]}
{"difficulty": "중", "question": "벌금 지불 처리 시 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.FineController", "com.skax.library.service.impl.FineServiceImpl.payFine", "com.skax.library.repository.FineRepository"]}
{"difficulty": "중", "question": "사용자가 입력한 키워드로 도서를 검색하는 전체 처리 흐름은 무엇인가요?", "answer": ["com.skax.library.controller.BookController", "com.skax.library.service.impl.BookServiceImpl.searchBooks", "com.skax.library.repository.BookRepository"]}
{"difficulty": "중", "question": "예약이 만료되었을 때 해당 예약을 취소하는 흐름을 처리하는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.ReservationController", "com.skax.library.service.impl.ReservationServiceImpl.cancelReservation", "com.skax.library.repository.ReservationRepository"]}
{"difficulty": "중", "question": "회원 정보 업데이트 처리 흐름에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.MemberController", "com.skax.library.service.impl.MemberServiceImpl.updateMember", "com.skax.library.repository.MemberRepository"]}
{"difficulty": "중", "question": "도서 정보 업데이트 처리 플로우에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.BookController", "com.skax.library.service.impl.BookServiceImpl.updateBook", "com.skax.library.repository.BookRepository"]}
{"difficulty": "중", "question": "도서에 새로운 카테고리를 추가하는 전체 흐름에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.BookController", "com.skax.library.service.impl.BookServiceImpl.addCategoriesToBook", "com.skax.library.repository.CategoryRepository"]}
{"difficulty": "중", "question": "대출 기간 연장 처리 플로우에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.LoanController", "com.skax.library.service.impl.LoanServiceImpl.extendLoan", "com.skax.library.repository.LoanRepository"]}
{"difficulty": "중", "question": "현재 반납 기한이 지난 모든 대출을 조회하는 플로우에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.LoanController", "com.skax.library.service.impl.LoanServiceImpl.getOverdueLoans", "com.skax.library.repository.LoanRepository"]}
{"difficulty": "중", "question": "반납 기한이 지난 대출에 대해 벌금을 자동 부과하는 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.service.impl.LoanServiceImpl.getOverdueLoans", "com.skax.library.service.impl.FineServiceImpl.createFine", "com.skax.library.repository.FineRepository"]}
{"difficulty": "중", "question": "특정 카테고리에 속한 도서를 조회하는 전체 플로우에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.BookController", "com.skax.library.service.impl.BookServiceImpl.getBooksByCategory", "com.skax.library.repository.BookRepository"]}
{"difficulty": "중", "question": "사용 가능한 도서만 조회하는 플로우에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.BookController", "com.skax.library.service.impl.BookServiceImpl.getAvailableBooks", "com.skax.library.repository.BookRepository"]}
{"difficulty": "중", "question": "특정 회원이 현재 활성 상태로 대출한 도서를 조회하는 플로우에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.LoanController", "com.skax.library.service.impl.LoanServiceImpl.getActiveLoansByMemberId", "com.skax.library.repository.LoanRepository"]}
{"difficulty": "중", "question": "회원이 추가 대출을 할 수 있는지 확인하는 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.LoanController", "com.skax.library.service.impl.LoanServiceImpl.canMemberBorrow", "com.skax.library.repository.MemberRepository"]}
{"difficulty": "중", "question": "도서 상태를 변경하는 처리 플로우에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.BookController", "com.skax.library.service.impl.BookServiceImpl.updateBookStatus", "com.skax.library.repository.BookRepository"]}
{"difficulty": "중", "question": "회원 상태를 변경하는 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.MemberController", "com.skax.library.service.impl.MemberServiceImpl.updateMemberStatus", "com.skax.library.repository.MemberRepository"]}
{"difficulty": "중", "question": "특정 도서의 상세 정보를 조회하는 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.BookController", "com.skax.library.service.impl.BookServiceImpl.getBookById", "com.skax.library.repository.BookRepository"]}
{"difficulty": "중", "question": "ISBN으로 도서를 검색하는 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.BookController", "com.skax.library.service.impl.BookServiceImpl.getBookByIsbn", "com.skax.library.repository.BookRepository"]}
{"difficulty": "중", "question": "특정 대출의 상세 정보를 조회하는 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.LoanController", "com.skax.library.service.impl.LoanServiceImpl.getLoanById", "com.skax.library.repository.LoanRepository"]}
{"difficulty": "중", "question": "특정 도서의 모든 대출 기록을 조회하는 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.LoanController", "com.skax.library.service.impl.LoanServiceImpl.getLoansByBookId", "com.skax.library.repository.LoanRepository"]}
{"difficulty": "중", "question": "특정 회원에 대한 벌금 부과 기록을 조회하는 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.FineController", "com.skax.library.service.impl.FineServiceImpl.getFinesByMemberId", "com.skax.library.repository.FineRepository"]}
{"difficulty": "중", "question": "특정 도서 삭제 처리 플로우에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.BookController", "com.skax.library.service.impl.BookServiceImpl.deleteBook", "com.skax.library.repository.BookRepository"]}
{"difficulty": "중", "question": "도서 카테고리 삭제 플로우에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.CategoryController", "com.skax.library.service.impl.CategoryServiceImpl.deleteCategory", "com.skax.library.repository.CategoryRepository"]}
{"difficulty": "중", "question": "새로운 카테고리를 생성하는 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.CategoryController", "com.skax.library.service.impl.CategoryServiceImpl.createCategory", "com.skax.library.repository.CategoryRepository"]}
{"difficulty": "중", "question": "예약 실패를 처리하는 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.ReservationController", "com.skax.library.service.impl.ReservationServiceImpl.cancelReservation", "com.skax.library.repository.ReservationRepository"]}
{"difficulty": "중", "question": "특정 도서에 대한 예약 정보를 조회하는 플로우에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.ReservationController", "com.skax.library.service.impl.ReservationServiceImpl.getReservationsByBookId", "com.skax.library.repository.ReservationRepository"]}
{"difficulty": "중", "question": "특정 회원의 모든 예약 정보를 조회하는 플로우에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.ReservationController", "com.skax.library.service.impl.ReservationServiceImpl.getReservationsByMemberId", "com.skax.library.repository.ReservationRepository"]}
{"difficulty": "중", "question": "유효한 예약만 조회하는 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.ReservationController", "com.skax.library.service.impl.ReservationServiceImpl.getActiveReservations", "com.skax.library.repository.ReservationRepository"]}
{"difficulty": "중", "question": "도서에서 특정 카테고리를 제거하는 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.BookController", "com.skax.library.service.impl.BookServiceImpl.removeCategoryFromBook", "com.skax.library.repository.BookRepository"]}
{"difficulty": "중", "question": "벌금 관리 필터링 전체 플로우에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.FineController", "com.skax.library.service.impl.FineServiceImpl.findFines", "com.skax.library.repository.FineRepository"]}
{"difficulty": "중", "question": "특정 회원의 대출 기록을 조회하는 프로세스에서 페이징 처리를 포함하는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.LoanController", "com.skax.library.service.impl.LoanServiceImpl.getLoansByMemberId", "com.skax.library.repository.LoanRepository"]}
{"difficulty": "중", "question": "회원 삭제 처리 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.MemberController", "com.skax.library.service.impl.MemberServiceImpl.deleteMember", "com.skax.library.repository.MemberRepository"]}
{"difficulty": "중", "question": "도서 검색에 필터링과 정렬을 적용하는 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.controller.BookController", "com.skax.library.service.impl.BookServiceImpl.findAll", "com.skax.library.repository.BookRepository"]}
{"difficulty": "상", "question": "대출 반납 및 벌금 부과까지 연계된 전체 시스템 흐름을 처리하는 클래스들은 무엇인가요?", "answer": ["com.skax.library.service.impl.LoanServiceImpl.returnBook", "com.skax.library.service.impl.FineServiceImpl.createFine", "com.skax.library.repository.FineRepository"]}
{"difficulty": "상", "question": "대출 기간 연장 시 제한 조건을 검사하는 처리 흐름에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.service.impl.LoanServiceImpl.extendLoan", "com.skax.library.exception.InvalidLoanExtensionException", "com.skax.library.repository.LoanRepository"]}
{"difficulty": "상", "question": "대출 서비스와 예약 서비스 간의 상호 작용 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.service.impl.LoanServiceImpl.checkoutBook", "com.skax.library.service.impl.ReservationServiceImpl.processReservation", "com.skax.library.model.Reservation"]}
{"difficulty": "상", "question": "공통 엔티티 속성을 관리하는 기본 클래스와 이를 상속하는 클래스들의 관계는 무엇인가요?", "answer": ["com.skax.library.model.BaseEntity", "com.skax.library.model.Book", "com.skax.library.model.Member"]}
{"difficulty": "상", "question": "도서 대출 시 도서 업데이트와 예약 처리를 포함한 트랜잭션 관리 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.service.impl.LoanServiceImpl.checkoutBook", "com.skax.library.service.impl.BookServiceImpl.updateBookStatus", "com.skax.library.service.impl.ReservationServiceImpl.getActiveReservationForBook"]}
{"difficulty": "상", "question": "특정 도서가 여러 카테고리에 속할 때 카테고리 관계를 관리하는 클래스들은 무엇인가요?", "answer": ["com.skax.library.model.BookCategory", "com.skax.library.model.Book", "com.skax.library.model.Category"]}
{"difficulty": "상", "question": "예외 처리와 에러 응답을 관리하는 클래스들의 관계는 무엇인가요?", "answer": ["com.skax.library.exception.ResourceNotFoundException", "com.skax.library.exception.BookNotAvailableException", "com.skax.library.exception.InvalidLoanExtensionException"]}
{"difficulty": "상", "question": "도서 대출, 반납, 벌금 부과 기록이 연관된 보고서 생성 프로세스에서 호출되는 클래스들은 무엇인가요?", "answer": ["com.skax.library.service.impl.LoanServiceImpl.getOverdueLoans", "com.skax.library.service.impl.FineServiceImpl.getFinesByLoanId", "com.skax.library.repository.MemberRepository"]}
{"difficulty": "상", "question": "여러 도메인 간 데이터 변환과 매핑을 처리하는 클래스들은 무엇인가요?", "answer": ["com.skax.library.mapper.BookMapper", "com.skax.library.dto.BookDto", "com.skax.library.model.Book"]}
{"difficulty": "하", "question": "BookService에 책의 재고 수량을 증가시키는 메서드를 추가해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl.increaseBookStock"]}
{"difficulty": "하", "question": "MemberController에 회원 프로필 조회 엔드포인트를 추가해줘", "answer": ["com.skax.library.controller.MemberController.getMemberProfile"]}
{"difficulty": "하", "question": "Loan 엔티티에 연체 여부를 확인하는 필드를 추가해줘", "answer": ["com.skax.library.model.Loan"]}
{"difficulty": "하", "question": "ReservationService에 예약 취소 메서드 추가해줘", "answer": ["com.skax.library.service.impl.ReservationServiceImpl.cancelReservation"]}
{"difficulty": "하", "question": "CategoryController에 카테고리 삭제 API를 구현해줘", "answer": ["com.skax.library.controller.CategoryController.deleteCategory"]}
{"difficulty": "하", "question": "FineService에 벌금 면제 로직을 추가해줘", "answer": ["com.skax.library.service.impl.FineServiceImpl.waiveFine"]}
{"difficulty": "하", "question": "BookController에 도서 검색 기능을 추가해줘", "answer": ["com.skax.library.controller.BookController.searchBooks"]}
{"difficulty": "하", "question": "Member 엔티티에 회원 등급 필드를 추가해줘", "answer": ["com.skax.library.model.Member"]}
{"difficulty": "하", "question": "LoanService에 대출 연장 기능을 구현해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl.extendLoan"]}
{"difficulty": "하", "question": "CategoryService에 하위 카테고리 목록 조회 메서드를 추가해줘", "answer": ["com.skax.library.service.impl.CategoryServiceImpl.getSubCategories"]}
{"difficulty": "하", "question": "Book 엔티티에 출판사 정보 필드를 추가해줘", "answer": ["com.skax.library.model.Book"]}
{"difficulty": "하", "question": "MemberService에 비밀번호 변경 메서드를 추가해줘", "answer": ["com.skax.library.service.impl.MemberServiceImpl.changePassword"]}
{"difficulty": "하", "question": "ReservationController에 예약 목록 페이징 조회 API를 추가해줘", "answer": ["com.skax.library.controller.ReservationController.getReservationsWithPagination"]}
{"difficulty": "하", "question": "FineController에 벌금 납부 내역 조회 API를 추가해줘", "answer": ["com.skax.library.controller.FineController.getFinePaymentHistory"]}
{"difficulty": "하", "question": "BookServiceImpl에 베스트셀러 목록 조회 로직을 구현해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl.getBestSellerBooks"]}
{"difficulty": "중", "question": "대출 시 해당 도서의 재고를 감소시키는 로직을 추가해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl.createLoan", "com.skax.library.service.impl.BookServiceImpl.updateBookStock"]}
{"difficulty": "중", "question": "회원 가입 시 이메일 중복 검사와 유효성 검증 로직을 구현해줘", "answer": ["com.skax.library.service.impl.MemberServiceImpl.registerMember", "com.skax.library.repository.MemberRepository"]}
{"difficulty": "중", "question": "도서 반납 시 연체료 계산 및 부과 로직을 구현해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl.returnBook", "com.skax.library.service.impl.FineServiceImpl.calculateAndCreateFine"]}
{"difficulty": "중", "question": "예약한 도서가 대출 가능하게 되면 회원에게 알림을 보내는 기능을 구현해줘", "answer": ["com.skax.library.service.impl.ReservationServiceImpl.notifyBookAvailable", "com.skax.library.event.ReservationEvent"]}
{"difficulty": "중", "question": "사용자가 도서를 대출할 때 해당 도서의 예약 여부를 확인하는 로직을 추가해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl.createLoan", "com.skax.library.service.impl.ReservationServiceImpl.checkReservationExists"]}
{"difficulty": "상", "question": "도서 대출, 반납, 예약 시 통합 이벤트 로깅 시스템을 구현해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl", "com.skax.library.service.impl.ReservationServiceImpl", "com.skax.library.config.EventLoggingConfig"]}
{"difficulty": "상", "question": "회원 등급에 따라 대출 가능 권수와 연체료 할인율을 다르게 적용하는 시스템을 구현해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl.createLoan", "com.skax.library.service.impl.FineServiceImpl.calculateFine", "com.skax.library.config.MembershipConfig"]}
{"difficulty": "상", "question": "도서 예약과 대출 시 동시성 문제를 해결하기 위한 락 메커니즘을 구현해줘", "answer": ["com.skax.library.service.impl.ReservationServiceImpl", "com.skax.library.service.impl.LoanServiceImpl", "com.skax.library.config.LockingConfig"]}
{"difficulty": "중", "question": "카테고리 삭제 시 해당 카테고리와 연결된 모든 도서의 카테고리 정보를 업데이트하는 로직을 구현해줘", "answer": ["com.skax.library.service.impl.CategoryServiceImpl.deleteCategory", "com.skax.library.service.impl.BookServiceImpl.updateBooksCategory"]}
{"difficulty": "중", "question": "도서 상세 정보 조회 시 해당 도서의 현재 대출 및 예약 상태도 함께 제공하는 API를 구현해줘", "answer": ["com.skax.library.controller.BookController.getBookDetail", "com.skax.library.service.impl.BookServiceImpl.getBookWithStatus"]}
{"difficulty": "하", "question": "Reservation 엔티티에 예약 만료일 필드를 추가해줘", "answer": ["com.skax.library.model.Reservation"]}
{"difficulty": "하", "question": "BookService에 도서 ISBN으로 검색하는 메서드를 구현해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl.findBookByISBN"]}
{"difficulty": "하", "question": "FineService에 연체료 할인 적용 메서드를 추가해줘", "answer": ["com.skax.library.service.impl.FineServiceImpl.applyDiscount"]}
{"difficulty": "하", "question": "MemberController에 회원 목록 조회 API를 구현해줘", "answer": ["com.skax.library.controller.MemberController.getAllMembers"]}
{"difficulty": "하", "question": "Loan 엔티티에 반납 예정일 계산 메서드를 추가해줘", "answer": ["com.skax.library.model.Loan.calculateDueDate"]}
{"difficulty": "하", "question": "CategoryService에 카테고리별 도서 수 조회 메서드를 구현해줘", "answer": ["com.skax.library.service.impl.CategoryServiceImpl.countBooksByCategory"]}
{"difficulty": "하", "question": "ReservationController에 예약 취소 API를 추가해줘", "answer": ["com.skax.library.controller.ReservationController.cancelReservation"]}
{"difficulty": "하", "question": "Book 엔티티에 대출 가능 여부 판단 메서드를 추가해줘", "answer": ["com.skax.library.model.Book.isAvailableForLoan"]}
{"difficulty": "하", "question": "MemberService에 회원 대출 이력 조회 메서드를 구현해줘", "answer": ["com.skax.library.service.impl.MemberServiceImpl.getLoanHistory"]}
{"difficulty": "하", "question": "LoanController에 회원별 대출 현황 조회 API를 추가해줘", "answer": ["com.skax.library.controller.LoanController.getMemberLoans"]}
{"difficulty": "하", "question": "FineController에 벌금 납부 API를 구현해줘", "answer": ["com.skax.library.controller.FineController.payFine"]}
{"difficulty": "하", "question": "BookController에 도서 추천 목록 조회 API를 추가해줘", "answer": ["com.skax.library.controller.BookController.getRecommendedBooks"]}
{"difficulty": "하", "question": "MemberService에 회원 이메일 변경 기능을 구현해줘", "answer": ["com.skax.library.service.impl.MemberServiceImpl.updateEmail"]}
{"difficulty": "하", "question": "CategoryController에 상위 카테고리 조회 API를 추가해줘", "answer": ["com.skax.library.controller.CategoryController.getParentCategories"]}
{"difficulty": "하", "question": "LoanService에 연체 도서 목록 조회 메서드를 구현해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl.getOverdueLoans"]}
{"difficulty": "중", "question": "도서 등록 시 해당 카테고리가 존재하는지 확인하고, 없으면 생성하는 로직을 구현해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl.createBook", "com.skax.library.service.impl.CategoryServiceImpl.findOrCreateCategory"]}
{"difficulty": "중", "question": "회원 탈퇴 시 해당 회원의 대출 및 예약 정보를 모두 처리하는 로직을 구현해줘", "answer": ["com.skax.library.service.impl.MemberServiceImpl.deleteMember", "com.skax.library.service.impl.LoanServiceImpl.handleLoansForDeletedMember"]}
{"difficulty": "중", "question": "도서 검색 결과를 카테고리별로 그룹화하여 제공하는 기능을 구현해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl.searchBooksGroupByCategory", "com.skax.library.controller.BookController.searchBooksByCategory"]}
{"difficulty": "중", "question": "회원이 연체료를 납부하면 대출 가능 상태로 변경하는 시스템을 구현해줘", "answer": ["com.skax.library.service.impl.FineServiceImpl.processFinePayment", "com.skax.library.service.impl.MemberServiceImpl.updateMemberStatus"]}
{"difficulty": "중", "question": "도서 예약 취소 시 대기 중인 다음 예약자에게 알림을 보내는 기능을 구현해줘", "answer": ["com.skax.library.service.impl.ReservationServiceImpl.cancelAndNotifyNext", "com.skax.library.event.ReservationEvent"]}
{"difficulty": "중", "question": "회원 정보 수정 시 변경 내역을 로깅하는 기능을 구현해줘", "answer": ["com.skax.library.service.impl.MemberServiceImpl.updateMember", "com.skax.library.event.MemberEvent"]}
{"difficulty": "상", "question": "도서 추천 시스템을 구현하여 회원별 맞춤 도서 목록을 제공하는 기능을 추가해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl.getRecommendedBooks", "com.skax.library.service.impl.LoanServiceImpl.getMemberLoanHistory", "com.skax.library.config.RecommendationConfig"]}
{"difficulty": "중", "question": "대출 가능한 도서만 검색하는 필터링 기능을 추가해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl.findAvailableBooks", "com.skax.library.repository.BookRepository"]}
{"difficulty": "중", "question": "특정 기간 내에 가장 많이 대출된 도서 통계 기능을 구현해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl.getMostBorrowedBooks", "com.skax.library.repository.LoanRepository"]}
{"difficulty": "중", "question": "회원별 연체 이력을 조회하고 경고 메일을 발송하는 기능을 구현해줘", "answer": ["com.skax.library.service.impl.MemberServiceImpl.getOverdueHistory", "com.skax.library.service.impl.FineServiceImpl.sendOverdueWarning"]}
{"difficulty": "중", "question": "도서 정보 수정 시 변경 이력을 기록하는 로직을 구현해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl.updateBook", "com.skax.library.event.BookEvent"]}
{"difficulty": "중", "question": "카테고리 이름 변경 시 연결된 모든 도서의 카테고리 이름도 함께 업데이트하는 기능을 구현해줘", "answer": ["com.skax.library.service.impl.CategoryServiceImpl.renameCategory", "com.skax.library.service.impl.BookServiceImpl.updateBooksForCategoryRename"]}
{"difficulty": "상", "question": "시스템 전체에 걸쳐 도서 대출과 반납 프로세스에 대한 트랜잭션 관리 시스템을 구현해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl", "com.skax.library.service.impl.BookServiceImpl", "com.skax.library.config.TransactionConfig"]}
{"difficulty": "하", "question": "ReservationService에 특정 도서에 대한 예약 대기 순위 조회 메서드를 추가해줘", "answer": ["com.skax.library.service.impl.ReservationServiceImpl.getReservationQueue"]}
{"difficulty": "하", "question": "FineController에 미납 벌금이 있는 회원 목록 조회 API를 추가해줘", "answer": ["com.skax.library.controller.FineController.getMembersWithUnpaidFines"]}
{"difficulty": "하", "question": "BookService에 도서 폐기 처리 메서드를 구현해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl.discardBook"]}
{"difficulty": "하", "question": "MemberController에 회원 검색 API를 추가해줘", "answer": ["com.skax.library.controller.MemberController.searchMembers"]}
{"difficulty": "하", "question": "CategoryService에 빈 카테고리 삭제 메서드를 구현해줘", "answer": ["com.skax.library.service.impl.CategoryServiceImpl.deleteEmptyCategory"]}
{"difficulty": "하", "question": "LoanController에 대출 기간 연장 API를 추가해줘", "answer": ["com.skax.library.controller.LoanController.extendLoanPeriod"]}
{"difficulty": "하", "question": "Fine 엔티티에 납부 상태 필드를 추가해줘", "answer": ["com.skax.library.model.Fine"]}
{"difficulty": "하", "question": "ReservationService에 예약 만료 처리 메서드를 추가해줘", "answer": ["com.skax.library.service.impl.ReservationServiceImpl.expireReservation"]}
{"difficulty": "하", "question": "BookController에 신간 도서 목록 조회 API를 구현해줘", "answer": ["com.skax.library.controller.BookController.getNewArrivals"]}
{"difficulty": "하", "question": "MemberService에 회원 활성화/비활성화 메서드를 추가해줘", "answer": ["com.skax.library.service.impl.MemberServiceImpl.toggleMemberStatus"]}
{"difficulty": "하", "question": "CategoryController에 카테고리 병합 API를 추가해줘", "answer": ["com.skax.library.controller.CategoryController.mergeCategories"]}
{"difficulty": "하", "question": "LoanService에 자동 연장 가능 여부 확인 메서드를 구현해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl.isEligibleForAutoRenewal"]}
{"difficulty": "중", "question": "회원 등급 업그레이드 조건을 검사하고 적용하는 기능을 구현해줘", "answer": ["com.skax.library.service.impl.MemberServiceImpl.checkAndUpgradeMembership", "com.skax.library.service.impl.LoanServiceImpl.getMemberLoanCount"]}
{"difficulty": "중", "question": "연체 도서 반납 시 자동으로 벌금을 생성하고 회원 상태를 업데이트하는 로직을 구현해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl.returnOverdueBook", "com.skax.library.service.impl.FineServiceImpl.createFine"]}
{"difficulty": "중", "question": "도서 예약 시 해당 도서가 이미 대출 가능한 상태인지 확인하고 바로 대출 처리하는 로직을 구현해줘", "answer": ["com.skax.library.service.impl.ReservationServiceImpl.createReservation", "com.skax.library.service.impl.BookServiceImpl.checkBookAvailability"]}
{"difficulty": "중", "question": "회원별 관심 카테고리 설정 및 관련 도서 추천 기능을 구현해줘", "answer": ["com.skax.library.service.impl.MemberServiceImpl.updatePreferredCategories", "com.skax.library.service.impl.BookServiceImpl.getBooksByCategories"]}
{"difficulty": "중", "question": "도서 대출 기록을 분석하여 월별 대출 통계를 생성하는 기능을 구현해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl.generateMonthlyStatistics", "com.skax.library.repository.LoanRepository"]}
{"difficulty": "중", "question": "카테고리 계층 구조를 관리하는 트리 형태의 데이터 구조와 관련 API를 구현해줘", "answer": ["com.skax.library.service.impl.CategoryServiceImpl.buildCategoryTree", "com.skax.library.controller.CategoryController.getCategoryTree"]}
{"difficulty": "상", "question": "도서관 전체 시스템에 대한 백업 및 복구 기능을 구현해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl", "com.skax.library.service.impl.MemberServiceImpl", "com.skax.library.config.BackupRecoveryConfig"]}
{"difficulty": "중", "question": "동일 저자의 다른 도서를 추천하는 기능을 구현해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl.getBooksByAuthor", "com.skax.library.controller.BookController.getBooksFromSameAuthor"]}
{"difficulty": "중", "question": "회원 대출 이력을 기반으로 인기 도서를 추천하는 기능을 구현해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl.getPopularBooks", "com.skax.library.service.impl.BookServiceImpl.getBookRecommendations"]}
{"difficulty": "상", "question": "복수의 도서를 한 번에 대출하고 반납하는 일괄 처리 기능을 구현해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl", "com.skax.library.service.impl.BookServiceImpl", "com.skax.library.controller.LoanController"]}
{"difficulty": "중", "question": "도서 상태(분실, 파손 등)를 관리하는 시스템을 구현해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl.updateBookStatus", "com.skax.library.controller.BookController.reportBookStatus"]}
{"difficulty": "하", "question": "Category 엔티티에 생성일자 필드를 추가해줘", "answer": ["com.skax.library.model.Category"]}
{"difficulty": "하", "question": "BookService에 중복 도서 체크 메서드를 추가해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl.checkDuplicateBook"]}
{"difficulty": "하", "question": "MemberController에 회원 로그인 API를 구현해줘", "answer": ["com.skax.library.controller.MemberController.login"]}
{"difficulty": "하", "question": "ReservationService에 회원별 예약 목록 조회 메서드를 추가해줘", "answer": ["com.skax.library.service.impl.ReservationServiceImpl.getReservationsByMember"]}
{"difficulty": "하", "question": "FineService에 벌금 면제 처리 메서드를 구현해줘", "answer": ["com.skax.library.service.impl.FineServiceImpl.exemptFine"]}
{"difficulty": "하", "question": "LoanController에 특정 도서의 대출 이력 조회 API를 추가해줘", "answer": ["com.skax.library.controller.LoanController.getBookLoanHistory"]}
{"difficulty": "하", "question": "Book 엔티티에 별점 평가 필드를 추가해줘", "answer": ["com.skax.library.model.Book"]}
{"difficulty": "하", "question": "CategoryService에 연관 카테고리 추천 메서드를 구현해줘", "answer": ["com.skax.library.service.impl.CategoryServiceImpl.getRelatedCategories"]}
{"difficulty": "하", "question": "Member 엔티티에 마지막 로그인 일자 필드를 추가해줘", "answer": ["com.skax.library.model.Member"]}
{"difficulty": "중", "question": "도서 예약과 대출 시 알림 메시지를 발송하는 통합 알림 시스템을 구현해줘", "answer": ["com.skax.library.service.impl.ReservationServiceImpl", "com.skax.library.service.impl.LoanServiceImpl.createLoan"]}
{"difficulty": "중", "question": "카테고리별 도서 대출 통계 및 시각화 기능을 추가해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl.getLoanStatsByCategory", "com.skax.library.controller.CategoryController.getLoanStatistics"]}
{"difficulty": "중", "question": "회원 검색 시 대출 및 예약 정보도 함께 제공하는 API를 구현해줘", "answer": ["com.skax.library.service.impl.MemberServiceImpl.getMemberWithDetails", "com.skax.library.controller.MemberController.getMemberDetails"]}
{"difficulty": "중", "question": "특정 시간에 자동으로 실행되는 도서 반납 알림 시스템을 구현해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl.sendReturnReminders", "com.skax.library.config.SchedulingConfig"]}
{"difficulty": "상", "question": "회원 활동 로그와 도서 이용 패턴을 분석하여 맞춤형 서비스를 제공하는 시스템을 구현해줘", "answer": ["com.skax.library.service.impl.MemberServiceImpl", "com.skax.library.service.impl.LoanServiceImpl", "com.skax.library.config.AnalyticsConfig"]}
{"difficulty": "중", "question": "도서 예약 가능 수량에 제한을 두고 초과 시 대기 리스트로 관리하는 기능을 구현해줘", "answer": ["com.skax.library.service.impl.ReservationServiceImpl.createReservation", "com.skax.library.service.impl.BookServiceImpl.checkReservationLimit"]}
{"difficulty": "중", "question": "도서 반납 시 다음 예약자에게 자동으로 알림을 보내고 일정 시간 예약을 유지하는 기능을 구현해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl.returnBook", "com.skax.library.service.impl.ReservationServiceImpl.notifyNextReservation"]}
{"difficulty": "상", "question": "도서관 시스템 전체에 대한 접근 권한과 역할 기반 인증 시스템을 구현해줘", "answer": ["com.skax.library.service.impl.MemberServiceImpl", "com.skax.library.controller.MemberController", "com.skax.library.config.SecurityConfig"]}
{"difficulty": "상", "question": "도서 추천, 대출, 반납을 위한 QR 코드 기반 모바일 인터페이스를 구현해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl", "com.skax.library.service.impl.LoanServiceImpl", "com.skax.library.config.QRCodeConfig"]}
{"difficulty": "중", "question": "회원 대출 패턴을 분석하여 도서관 재고 계획에 반영하는 시스템을 구현해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl.analyzeBorrowingPatterns", "com.skax.library.service.impl.BookServiceImpl.suggestInventoryUpdates"]}
{"difficulty": "중", "question": "카테고리 및 태그 기반 도서 검색 시스템을 구현해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl.searchBooksByTags", "com.skax.library.controller.BookController.advancedSearch"]}
{"difficulty": "상", "question": "외부 도서 API와 연동하여 도서 정보를 자동으로 업데이트하는 시스템을 구현해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl", "com.skax.library.repository.BookRepository", "com.skax.library.config.ExternalApiConfig"]}
{"difficulty": "중", "question": "대출 기간 만료 시 자동 연장 또는 연체료 부과를 회원 등급에 따라 처리하는 시스템을 구현해줘", "answer": ["com.skax.library.service.impl.LoanServiceImpl.handleDueLoans", "com.skax.library.service.impl.MemberServiceImpl.getMemberTier"]}
{"difficulty": "상", "question": "도서관 전체 업무 프로세스를 마이크로서비스 아키텍처로 전환하는 시스템을 설계해줘", "answer": ["com.skax.library.config.ServiceConfig", "com.skax.library.service.impl.BookServiceImpl", "com.skax.library.config.MessageQueueConfig"]}
{"difficulty": "중", "question": "도서 상태 및 재고 수량을 실시간으로 모니터링하는 대시보드 시스템을 구현해줘", "answer": ["com.skax.library.service.impl.BookServiceImpl.getInventoryStatus", "com.skax.library.controller.BookController.getInventoryDashboard"]}
